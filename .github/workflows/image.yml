name: Build and Push Image

on:
  push:
    branches: [main]
  schedule:
    - cron: "0 */2 * * *"
  workflow_dispatch:

jobs:
  latest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check Version
        id: check
        run: |
          NEW_VERSION=$(curl -s https://s3.amazonaws.com/dstbuilds/builds.json | jq '.release[-1] | tonumber')
          OLD_VERSION=$(cat version.txt)
          if [ "$NEW_VERSION" -gt "$OLD_VERSION" ]; then
            echo "Need Update $OLD_VERSION -> $NEW_VERSION" >> $GITHUB_STEP_SUMMARY
            echo "need_update=true" >> $GITHUB_OUTPUT
            echo -n $NEW_VERSION > version.txt
          else
            echo "Skip Update $OLD_VERSION : $NEW_VERSION" >> $GITHUB_STEP_SUMMARY
            echo "need_update=false" >> $GITHUB_OUTPUT
          fi

      - name: Build Image
        if: ${{ steps.check.outputs.need_update == 'true' }}
        id: build
        uses: redhat-actions/buildah-build@v2
        with:
          image: dst-server
          tags: latest
          containerfiles: |
            Containerfile

      - name: Push To Registry
        if: ${{ steps.check.outputs.need_update == 'true' }}
        id: push
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build.outputs.image }}
          tags: ${{ steps.build.outputs.tags }}
          registry: quay.io/wh2099
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Update version.txt
        if: ${{ steps.check.outputs.need_update == 'true' }}
        uses: EndBug/add-and-commit@v9
        with:
          add: version.txt
          default_author: github_actions

  beta:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check Version
        id: check
        run: |
          NEW_VERSION=$(curl -s https://s3.amazonaws.com/dstbuilds/builds.json | jq '.updatebeta[-1] | tonumber')
          OLD_VERSION=$(cat beta-version.txt)
          if [ "$NEW_VERSION" -gt "$OLD_VERSION" ]; then
            echo "Need Update $OLD_VERSION -> $NEW_VERSION" >> $GITHUB_STEP_SUMMARY
            echo "need_update=true" >> $GITHUB_OUTPUT
            echo -n $NEW_VERSION > beta-version.txt
          else
            echo "Skip Update $OLD_VERSION : $NEW_VERSION" >> $GITHUB_STEP_SUMMARY
            echo "need_update=false" >> $GITHUB_OUTPUT
          fi

      - name: Build Image
        if: ${{ steps.check.outputs.need_update == 'true' }}
        id: build
        uses: redhat-actions/buildah-build@v2
        with:
          image: dst-server
          tags: beta
          containerfiles: |
            Containerfile
          build-args: |
            BETA=1

      - name: Push To Registry
        if: ${{ steps.check.outputs.need_update == 'true' }}
        id: push
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build.outputs.image }}
          tags: ${{ steps.build.outputs.tags }}
          registry: quay.io/wh2099
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Update version.txt
        if: ${{ steps.check.outputs.need_update == 'true' }}
        uses: EndBug/add-and-commit@v9
        with:
          add: beta-version.txt
          default_author: github_actions
